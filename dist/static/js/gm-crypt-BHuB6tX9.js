import{a as T,b as B}from"./base64-js-seTY8gGK.js";const w={},m=Object.freeze(Object.defineProperty({__proto__:null,default:w},Symbol.toStringTag,{value:"Module"})),b=T(m),p=B;let U=class{static stringToArrayBufferInUtf8(e){const t=typeof window>"u"?b.TextEncoder:window.TextEncoder;return new t().encode(e)}static utf8ArrayBufferToString(e){const t=typeof window>"u"?b.TextDecoder:window.TextDecoder;return new t("utf-8").decode(e)}static arrayBufferToBase64(e){return p.fromByteArray(e)}static base64ToArrayBuffer(e){return p.toByteArray(e)}};var g=U;const d=g,c=16,y=Uint8Array.from([214,144,233,254,204,225,61,183,22,182,20,194,40,251,44,5,43,103,154,118,42,190,4,195,170,68,19,38,73,134,6,153,156,66,80,244,145,239,152,122,51,84,11,67,237,207,172,98,228,179,28,169,201,8,232,149,128,223,148,250,117,143,63,166,71,7,167,252,243,115,23,186,131,89,60,25,230,133,79,168,104,107,129,178,113,100,218,139,248,235,15,75,112,86,157,53,30,36,14,94,99,88,209,162,37,34,124,59,1,33,120,135,212,0,70,87,159,211,39,82,76,54,2,231,160,196,200,158,234,191,138,210,64,199,56,181,163,247,242,206,249,97,21,161,224,174,93,164,155,52,26,85,173,147,50,48,245,140,177,227,29,246,226,46,130,102,202,96,192,41,35,171,13,83,78,111,213,219,55,69,222,253,142,47,3,255,106,114,109,108,91,81,141,27,175,146,187,221,188,127,17,217,92,65,31,16,90,216,10,193,49,136,165,205,123,189,45,116,208,18,184,229,180,176,137,105,151,74,12,150,119,126,101,185,241,9,197,110,198,132,24,240,125,236,58,220,77,32,121,238,95,62,215,203,57,72]),v=Uint32Array.from([462357,472066609,943670861,1415275113,1886879365,2358483617,2830087869,3301692121,3773296373,4228057617,404694573,876298825,1347903077,1819507329,2291111581,2762715833,3234320085,3705924337,4177462797,337322537,808926789,1280531041,1752135293,2223739545,2695343797,3166948049,3638552301,4110090761,269950501,741554753,1213159005,1684763257]),u=Uint32Array.from([2746333894,1453994832,1736282519,2993693404]);let A=class{constructor(e){let t=d.stringToArrayBufferInUtf8(e.key);if(t.length!==16)throw new Error("key should be a 16 bytes string");this.key=t;let x=new Uint8Array(0);if(e.iv!==void 0&&e.iv!==null&&(x=d.stringToArrayBufferInUtf8(e.iv),x.length!==16))throw new Error("iv should be a 16 bytes string");this.iv=x,this.mode="cbc",["cbc","ecb"].indexOf(e.mode)>=0&&(this.mode=e.mode),this.cipherType="base64",["base64","text"].indexOf(e.outType)>=0&&(this.cipherType=e.outType),this.encryptRoundKeys=new Uint32Array(32),this.spawnEncryptRoundKeys(),this.decryptRoundKeys=Uint32Array.from(this.encryptRoundKeys),this.decryptRoundKeys.reverse()}doBlockCrypt(e,t){let x=new Uint32Array(36);x.set(e,0);for(let o=0;o<32;o++)x[o+4]=x[o]^this.tTransform1(x[o+1]^x[o+2]^x[o+3]^t[o]);let f=new Uint32Array(4);return f[0]=x[35],f[1]=x[34],f[2]=x[33],f[3]=x[32],f}spawnEncryptRoundKeys(){let e=new Uint32Array(4);e[0]=this.key[0]<<24|this.key[1]<<16|this.key[2]<<8|this.key[3],e[1]=this.key[4]<<24|this.key[5]<<16|this.key[6]<<8|this.key[7],e[2]=this.key[8]<<24|this.key[9]<<16|this.key[10]<<8|this.key[11],e[3]=this.key[12]<<24|this.key[13]<<16|this.key[14]<<8|this.key[15];let t=new Uint32Array(36);t[0]=e[0]^u[0],t[1]=e[1]^u[1],t[2]=e[2]^u[2],t[3]=e[3]^u[3];for(let x=0;x<32;x++)t[x+4]=t[x]^this.tTransform2(t[x+1]^t[x+2]^t[x+3]^v[x]),this.encryptRoundKeys[x]=t[x+4]}rotateLeft(e,t){return e<<t|e>>>32-t}linearTransform1(e){return e^this.rotateLeft(e,2)^this.rotateLeft(e,10)^this.rotateLeft(e,18)^this.rotateLeft(e,24)}linearTransform2(e){return e^this.rotateLeft(e,13)^this.rotateLeft(e,23)}tauTransform(e){return y[e>>>24&255]<<24|y[e>>>16&255]<<16|y[e>>>8&255]<<8|y[e&255]}tTransform1(e){let t=this.tauTransform(e);return this.linearTransform1(t)}tTransform2(e){let t=this.tauTransform(e);return this.linearTransform2(t)}padding(e){if(e===null)return null;let t=c-e.length%c,x=new Uint8Array(e.length+t);return x.set(e,0),x.fill(t,e.length),x}dePadding(e){if(e===null)return null;let t=e[e.length-1];return e.slice(0,e.length-t)}uint8ToUint32Block(e,t=0){let x=new Uint32Array(4);return x[0]=e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3],x[1]=e[t+4]<<24|e[t+5]<<16|e[t+6]<<8|e[t+7],x[2]=e[t+8]<<24|e[t+9]<<16|e[t+10]<<8|e[t+11],x[3]=e[t+12]<<24|e[t+13]<<16|e[t+14]<<8|e[t+15],x}encrypt(e){let t=d.stringToArrayBufferInUtf8(e),x=this.padding(t),f=x.length/c,o=new Uint8Array(x.length);if(this.mode==="cbc"){if(this.iv===null||this.iv.length!==16)throw new Error("iv error");let r=this.uint8ToUint32Block(this.iv);for(let i=0;i<f;i++){let a=i*c,s=this.uint8ToUint32Block(x,a);r[0]=r[0]^s[0],r[1]=r[1]^s[1],r[2]=r[2]^s[2],r[3]=r[3]^s[3];let n=this.doBlockCrypt(r,this.encryptRoundKeys);r=n;for(let l=0;l<c;l++)o[a+l]=n[parseInt(l/4)]>>(3-l)%4*8&255}}else for(let r=0;r<f;r++){let i=r*c,a=this.uint8ToUint32Block(x,i),s=this.doBlockCrypt(a,this.encryptRoundKeys);for(let n=0;n<c;n++)o[i+n]=s[parseInt(n/4)]>>(3-n)%4*8&255}return this.cipherType==="base64"?d.arrayBufferToBase64(o):d.utf8ArrayBufferToString(o)}decrypt(e){let t=new Uint8Array;this.cipherType==="base64"?t=d.base64ToArrayBuffer(e):t=d.stringToArrayBufferInUtf8(e);let x=t.length/c,f=new Uint8Array(t.length);if(this.mode==="cbc"){if(this.iv===null||this.iv.length!==16)throw new Error("iv error");let r=this.uint8ToUint32Block(this.iv);for(let i=0;i<x;i++){let a=i*c,s=this.uint8ToUint32Block(t,a),n=this.doBlockCrypt(s,this.decryptRoundKeys),l=new Uint32Array(4);l[0]=r[0]^n[0],l[1]=r[1]^n[1],l[2]=r[2]^n[2],l[3]=r[3]^n[3],r=s;for(let h=0;h<c;h++)f[a+h]=l[parseInt(h/4)]>>(3-h)%4*8&255}}else for(let r=0;r<x;r++){let i=r*c,a=this.uint8ToUint32Block(t,i),s=this.doBlockCrypt(a,this.decryptRoundKeys);for(let n=0;n<c;n++)f[i+n]=s[parseInt(n/4)]>>(3-n)%4*8&255}let o=this.dePadding(f);return d.utf8ArrayBufferToString(o)}};var K=A;const C=K;var S={sm4:C};export{S as g};
